####Dunnetts####
fb_g$gd <- factor(fb_g$Group:fb_g$Density) #compares every combination of treatment and control
mdf.m2 <- glmmTMB(log(cover_g) ~ gd #* for interaction
+ (1|Block),
data = fb_g,
family = gaussian, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
emmeans(mdf.m2, specs = trt.vs.ctrlk~gd,ref = 3, type = "response")
a <- emmeans(mdf.m2, specs = trt.vs.ctrlk~gd,ref = 3, type = "response")
b <- a$contrasts
b
write.csv(b, "FB_Grass_Dunnetts.csv")
##UL Invasive trt vs ctl ####
mdf1$gd <- factor(mdf1$Group:mdf1$Density) #compares every combination of treatment and control
mdf.m5 <- glmmTMB(Invasive.Cover ~ gd #* for interaction
+ (1|Block),
data = mdf1,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
summary(mdf.m5) #don't use this summary
simulateResiduals(mdf.m5, plot = T)  #pretty good!
plotResiduals(mdf.m5, form= mdf$gd)
emmeans(mdf.m5, specs = trt.vs.ctrlk~gd,ref = 3) #reference group is the third option (10:C)
##UL Native trt vs ctl ####
### Dunnetts gaussian ####
mdf1$gd <- factor(mdf1$Group:mdf1$Density) #compares every combination of treatment and control
mdf.m9 <- glmmTMB(log(Native.Cover) ~ gd #* for interaction
+ (1|Block),
data = mdf1,
family = gaussian,
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
summary(mdf.m9) #don't use this summary
simulateResiduals(mdf.m9, plot = T) #pretty good!
plotResiduals(mdf.m9, form= mdf1$gd)
emmeans(mdf.m9, specs = trt.vs.ctrlk~gd,ref = 3, type = "response") #reference group is the third option (10:C)
### Perennial forbs ####
ul_pf <- ul %>%
filter(Date == "2022-09-16") %>%
dplyr::select(Block:Density, SYCI, BICE, RUMA) %>%
rowwise() %>%
mutate(cover_pf = sum(SYCI, BICE, RUMA))
#nudge 0s into a trace amount
ul_pf$cover_pf[ul_pf$cover_pf == 0] <- 0.0025 #one half the smallest amount recorded
####trts####
useData <- filter(ul_pf, Density != "C") #to make the plotResiduals work
useData$Group <- factor(useData$Group)
useData$Density <- factor(useData$Density)
mdf.m1 <- glmmTMB(cover_pf ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
emmeans(mdf.m1, pairwise~Group)
### Bulrushes ####
ul_b <- ul %>%
filter(Date == "2022-09-16") %>%
dplyr::select(Block:Density, BOMA, SCAC, SCAM) %>%
rowwise() %>%
mutate(cover_b = sum(BOMA, SCAC, SCAM))
#nudge 0s into a trace amount
ul_b$cover_b[ul_b$cover_b == 0] <- 0.0025 #one half the smallest amount recorded
####trts####
useData <- filter(ul_b, Density != "C") #to make the plotResiduals work
useData$Group <- factor(useData$Group)
useData$Density <- factor(useData$Density)
mdf.m1 <- glmmTMB(cover_b ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
emmeans(mdf.m1, pairwise~Group)
### Annual forbs ####
ul_af <- ul %>%
filter(Date == "2022-09-16") %>%
dplyr::select(Block:Density, EUOC) %>%
mutate(cover_af = EUOC)
#nudge 0s into a trace amount
ul_af$cover_af[ul_af$cover_af == 0] <- 0.0025 #one half the smallest amount recorded
####trts####
useData <- filter(ul_af, Density != "C") #to make the plotResiduals work
useData$Group <- factor(useData$Group)
useData$Density <- factor(useData$Density)
mdf.m1 <- glmmTMB(cover_af ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
emmeans(mdf.m1, pairwise~Group)
##FB Invasive ####
mdf.m4 <- glmmTMB(Invasive.Cover ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
#only need the last date
mdf <- fb %>%
filter(Date == "2022-09-16") %>%
dplyr::select(Block, Group, Density, Date, Invasive.Cover, Native.Cover)
useData <- filter(mdf, Density != "C") #to make the plotResiduals work
useData$Group <- factor(useData$Group)
useData$Density <- factor(useData$Density)
##FB Native ####
mdf.m1 <- glmmTMB(Native.Cover ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
emmeans(mdf.m1, pairwise~Group) #not significant when adjusted for the tukey test
load("clean_dfs.RData")
library(tidyverse)
library(glmmTMB) #allows us to use a beta distribution
library(DHARMa)
library(emmeans)
library(car)
library(multcompView)
library(gridExtra)
library(multcomp)
options(contrasts = c("contr.sum", "contr.poly"))
fb$Group <- as.factor(fb$Group)
fb$Density <- as.factor(fb$Density)
ul$Group <- as.factor(ul$Group)
ul$Density <- as.factor(ul$Density)
#only need the last date
mdf <- fb %>%
filter(Date == "2022-09-16") %>%
dplyr::select(Block, Group, Density, Date, Invasive.Cover, Native.Cover)
useData <- filter(mdf, Density != "C") #to make the plotResiduals work
useData$Group <- factor(useData$Group)
useData$Density <- factor(useData$Density)
##FB Native ####
mdf.m1 <- glmmTMB(Native.Cover ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
emmeans(mdf.m1, pairwise~Group) #not significant when adjusted for the tukey test
emmeans(mdf.m1, pairwise~Group, adjust = "none") #a more liberal test shows what we expected above with the groups
emmeans(mdf.m1, pairwise~Group) #not significant when adjusted for the tukey test
load("clean_dfs.RData")
library(tidyverse)
library(glmmTMB) #allows us to use a beta distribution
library(DHARMa)
library(emmeans)
library(car)
library(multcompView)
library(gridExtra)
library(multcomp)
options(contrasts = c("contr.sum", "contr.poly"))
fb$Group <- as.factor(fb$Group)
fb$Density <- as.factor(fb$Density)
ul$Group <- as.factor(ul$Group)
ul$Density <- as.factor(ul$Density)
#only need the last date
mdf <- fb %>%
filter(Date == "2022-09-16") %>%
dplyr::select(Block, Group, Density, Date, Invasive.Cover, Native.Cover)
useData <- filter(mdf, Density != "C") #to make the plotResiduals work
useData$Group <- factor(useData$Group)
useData$Density <- factor(useData$Density)
##FB Native ####
mdf.m1 <- glmmTMB(Native.Cover ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
car::Anova(mdf.m1) #no interaction but at least one group different from another
emmip(mdf.m1, Group~Density, CIs = T, type = "response") #shows on the level of the response
emmeans(mdf.m1, pairwise~Group) #not significant when adjusted for the tukey test
##FB Invasive ####
mdf.m4 <- glmmTMB(Invasive.Cover ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
car::Anova(mdf.m4) #no interaction but densities different and at least one group different
emmeans(mdf.m4, pairwise~Density, type = "response") #not significant but almost significant when adjusted for with tukey
load("clean_dfs.RData")
library(tidyverse)
library(glmmTMB) #allows us to use a beta distribution
library(DHARMa)
library(emmeans)
library(car)
library(multcompView)
library(gridExtra)
library(multcomp)
options(contrasts = c("contr.sum", "contr.poly"))
fb$Group <- as.factor(fb$Group)
fb$Density <- as.factor(fb$Density)
ul$Group <- as.factor(ul$Group)
ul$Density <- as.factor(ul$Density)
#only need the last date
mdf <- fb %>%
filter(Date == "2022-09-16") %>%
dplyr::select(Block, Group, Density, Date, Invasive.Cover, Native.Cover)
useData <- filter(mdf, Density != "C") #to make the plotResiduals work
useData$Group <- factor(useData$Group)
useData$Density <- factor(useData$Density)
##FB Native ####
mdf.m1 <- glmmTMB(Native.Cover ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
car::Anova(mdf.m1) #no interaction but at least one group different from another
a <- car::Anova(mdf.m1) #no interaction but at least one group different from another
write.csv(a, "FB_Invasive.csv")
write.csv(a, "FB_Native.csv")
##FB Invasive trt vs ctl ####
mdf$gd <- factor(mdf$Group:mdf$Density) #compares every combination of treatment and control
mdf.m2 <- glmmTMB(Invasive.Cover ~ gd #* for interaction
+ (1|Block),
data = mdf,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
#Dunnetts test - type 1 error control, comparing the control to each of 10 other means
#We have inflated type 1 error because we use the control mean 10 times
#We could use a tukeys but that would control for 55 tests and we only need 10 - we will lose all power
#Allows us to just look at control against every other treatment - only the comparisons we want
emmeans(mdf.m2, specs = trt.vs.ctrlk~gd,ref = 3, type = "response") #reference group is the third option (10:C)
#Dunnetts test - type 1 error control, comparing the control to each of 10 other means
#We have inflated type 1 error because we use the control mean 10 times
#We could use a tukeys but that would control for 55 tests and we only need 10 - we will lose all power
#Allows us to just look at control against every other treatment - only the comparisons we want
a <- emmeans(mdf.m2, specs = trt.vs.ctrlk~gd,ref = 3, type = "response") #reference group is the third option (10:C)
b <- a$contrasts
write.csv(b, "FB_Invasive_Dunnett.csv")
##FB native trt vs ctl ####
mdf$gd <- factor(mdf$Group:mdf$Density)
mdf.m3 <- glmmTMB(Native.Cover ~ gd #* for interaction
+ (1|Block),
data = mdf,
family = gaussian, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
emmeans(mdf.m3, specs = trt.vs.ctrlk~gd,ref = 3, type = "response") #reference group is the third option (10:C)
a <- emmeans(mdf.m3, specs = trt.vs.ctrlk~gd,ref = 3, type = "response") #reference group is the third option (10:C)
b <- a$contrasts
write.csv(b, "fb_native_dunnett.csv")
##FB Invasive ####
mdf.m4 <- glmmTMB(Invasive.Cover ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
car::Anova(mdf.m4) #no interaction but densities different and at least one group different
a <- car::Anova(mdf.m4) #no interaction but densities different and at least one group different
write.csv(a, "FB_Invasive.csv")
emmeans(mdf.m4, pairwise~Group, type = "response") #only 4 and 5 different when adjusted for tukey
a <- emmeans(mdf.m4, pairwise~Group, type = "response") #only 4 and 5 different when adjusted for tukey
b <- a$contrasts
write.csv(b, "fb_invasive_group_contrasts.csv")
emmeans(mdf.m4, pairwise~Density, type = "response") #not significant but almost significant when adjusted for with tukey
#UL ####
mdf1 <- ul %>%
filter(Date == "2022-09-16")
useData <- filter(mdf1, Density != "C") #to make the plotResiduals work
useData$Group <- factor(useData$Group)
useData$Density <- factor(useData$Density)
##UL Invasive trt vs ctl ####
mdf1$gd <- factor(mdf1$Group:mdf1$Density) #compares every combination of treatment and control
mdf.m5 <- glmmTMB(Invasive.Cover ~ gd #* for interaction
+ (1|Block),
data = mdf1,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
emmeans(mdf.m5, specs = trt.vs.ctrlk~gd,ref = 3) #reference group is the third option (10:C)
a <- emmeans(mdf.m5, specs = trt.vs.ctrlk~gd,ref = 3) #reference group is the third option (10:C)
b <- a$contrasts
write.csv(b, "UL_invasive_dunnett.csv")
##UL Invasive ####
mdf.m6 <- glmmTMB(Invasive.Cover ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
car::Anova(mdf.m6) #nothing significant
###Log normal ####
#this log normal one is good enough and shows nothing significant
mdf.m7 <- glmmTMB(log(Native.Cover) ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = gaussian, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
car::Anova(mdf.m7) #nothing significant
##UL Native trt vs ctl ####
### Dunnetts gaussian ####
mdf1$gd <- factor(mdf1$Group:mdf1$Density) #compares every combination of treatment and control
mdf.m9 <- glmmTMB(log(Native.Cover) ~ gd #* for interaction
+ (1|Block),
data = mdf1,
family = gaussian,
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
emmeans(mdf.m9, specs = trt.vs.ctrlk~gd,ref = 3, type = "response") #reference group is the third option (10:C)
### Perennial forbs ####
fb_pf <- fb %>%
filter(Date == "2022-09-16") %>%
dplyr::select(Block:Density, EUOC, EUMA) %>%
rowwise() %>%
mutate(cover_pf = sum(EUOC, EUMA))
#nudge 0s into a trace amount
fb_pf$cover_pf[fb_pf$cover_pf == 0] <- 0.0025 #one half the smallest amount recorded
####trts####
useData <- filter(fb_pf, Density != "C") #to make the plotResiduals work
useData$Group <- factor(useData$Group)
useData$Density <- factor(useData$Density)
mdf.m1 <- glmmTMB(cover_pf ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
### Bulrushes ####
fb_b <- fb %>%
filter(Date == "2022-09-16") %>%
dplyr::select(Block:Density, BOMA, SCAC, SCAM) %>%
rowwise() %>%
mutate(cover_b = sum(BOMA, SCAC, SCAM))
#nudge 0s into a trace amount
fb_b$cover_b[fb_b$cover_b == 0] <- 0.0025 #one half the smallest amount recorded
####trts####
useData <- filter(fb_b, Density != "C") #to make the plotResiduals work
useData$Group <- factor(useData$Group)
useData$Density <- factor(useData$Density)
mdf.m1 <- glmmTMB(cover_b ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
car::Anova(mdf.m1) #at least one group is significantly different from another
emmeans(mdf.m1, pairwise~Group)
####Dunnetts####
fb_b$gd <- factor(fb_b$Group:fb_b$Density) #compares every combination of treatment and control
mdf.m2 <- glmmTMB(cover_b ~ gd #* for interaction
+ (1|Block),
data = fb_b,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
emmeans(mdf.m2, specs = trt.vs.ctrlk~gd,ref = 3, type = "response")
## Grasses ####
fb_g <- fb %>%
filter(Date == "2022-09-16") %>%
dplyr::select(Block:Density, MUAS, DISP) %>%
rowwise() %>%
mutate(cover_g = sum(MUAS, DISP))
#nudge 0s into a trace amount
fb_g$cover_g[fb_g$cover_g == 0] <- 0.0025
####trts####
useData <- filter(fb_g, Density != "C") #to make the plotResiduals work
useData$Group <- factor(useData$Group)
useData$Density <- factor(useData$Density)
mdf.m1 <- glmmTMB(log(cover_g) ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = gaussian, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
car::Anova(mdf.m1) #interaction between group and density!
emmeans(mdf.m1, pairwise~Group*Density)
####Dunnetts####
fb_g$gd <- factor(fb_g$Group:fb_g$Density) #compares every combination of treatment and control
mdf.m2 <- glmmTMB(log(cover_g) ~ gd #* for interaction
+ (1|Block),
data = fb_g,
family = gaussian, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
emmeans(mdf.m2, specs = trt.vs.ctrlk~gd,ref = 3, type = "response")
### Perennial forbs ####
ul_pf <- ul %>%
filter(Date == "2022-09-16") %>%
dplyr::select(Block:Density, SYCI, BICE, RUMA) %>%
rowwise() %>%
mutate(cover_pf = sum(SYCI, BICE, RUMA))
#nudge 0s into a trace amount
ul_pf$cover_pf[ul_pf$cover_pf == 0] <- 0.0025 #one half the smallest amount recorded
####trts####
useData <- filter(ul_pf, Density != "C") #to make the plotResiduals work
useData$Group <- factor(useData$Group)
useData$Density <- factor(useData$Density)
mdf.m1 <- glmmTMB(cover_pf ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
car::Anova(mdf.m1) #at least one group significant
emmeans(mdf.m1, pairwise~Group)
####Dunnetts####
ul_pf$gd <- factor(ul_pf$Group:ul_pf$Density) #compares every combination of treatment and control
mdf.m2 <- glmmTMB(cover_pf ~ gd #* for interaction
+ (1|Block),
data = ul_pf,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
emmeans(mdf.m2, specs = trt.vs.ctrlk~gd,ref = 3, type = "response")
### Bulrushes ####
ul_b <- ul %>%
filter(Date == "2022-09-16") %>%
dplyr::select(Block:Density, BOMA, SCAC, SCAM) %>%
rowwise() %>%
mutate(cover_b = sum(BOMA, SCAC, SCAM))
#nudge 0s into a trace amount
ul_b$cover_b[ul_b$cover_b == 0] <- 0.0025 #one half the smallest amount recorded
####trts####
useData <- filter(ul_b, Density != "C") #to make the plotResiduals work
useData$Group <- factor(useData$Group)
useData$Density <- factor(useData$Density)
mdf.m1 <- glmmTMB(cover_b ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
car::Anova(mdf.m1) #at least one group is significantly different from another
emmeans(mdf.m1, pairwise~Group)
####Dunnetts####
ul_b$gd <- factor(ul_b$Group:ul_b$Density) #compares every combination of treatment and control
mdf.m2 <- glmmTMB(cover_b ~ gd #* for interaction
+ (1|Block),
data = ul_b,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
a <- emmeans(mdf.m2, specs = trt.vs.ctrlk~gd,ref = 3, type = "response")
b <- a$contrasts
write.csv(b, "Ul_bulrush_Dunnetts.csv")
### Annual forbs ####
ul_af <- ul %>%
filter(Date == "2022-09-16") %>%
dplyr::select(Block:Density, EUOC) %>%
mutate(cover_af = EUOC)
#nudge 0s into a trace amount
ul_af$cover_af[ul_af$cover_af == 0] <- 0.0025 #one half the smallest amount recorded
####trts####
useData <- filter(ul_af, Density != "C") #to make the plotResiduals work
useData$Group <- factor(useData$Group)
useData$Density <- factor(useData$Density)
mdf.m1 <- glmmTMB(cover_af ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
car::Anova(mdf.m1) #at least one group significantly different
emmeans(mdf.m1, pairwise~Group)
a <- emmeans(mdf.m1, pairwise~Group)
b <- a$contrasts
write.csv(a, "UL_annual_contrasts.csv")
a
b <- a$contrasts
b
write.csv(b, "UL_annual_contrasts.csv")
####Dunnetts####
ul_af$gd <- factor(ul_af$Group:ul_af$Density) #compares every combination of treatment and control
mdf.m2 <- glmmTMB(log(cover_af) ~ gd #* for interaction
+ (1|Block),
data = ul_af,
family = gaussian, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
emmeans(mdf.m2, specs = trt.vs.ctrlk~gd,ref = 3, type = "response")
