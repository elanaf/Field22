fb$Group <- as.factor(fb$Group)
fb$Density <- as.factor(fb$Density)
ul$Group <- as.factor(ul$Group)
ul$Density <- as.factor(ul$Density)
#only need the last date
mdf <- fb %>%
filter(Date == "2022-09-16") %>%
select(Block, Group, Density, Date, Invasive.Cover, Native.Cover)
#only need the last date
mdf <- fb %>%
filter(Date == "2022-09-16") %>%
tidyverse::select(Block, Group, Density, Date, Invasive.Cover, Native.Cover)
#only need the last date
mdf <- fb %>%
filter(Date == "2022-09-16") %>%
dplyr::select(Block, Group, Density, Date, Invasive.Cover, Native.Cover)
useData <- filter(mdf, Density != "C") #to make the plotResiduals work
useData$Group <- factor(useData$Group)
useData$Density <- factor(useData$Density)
##FB Native ####
mdf.m1 <- glmmTMB(Native.Cover ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
summary(mdf.m1) #don't use this summary
car::Anova(mdf.m1) #no interaction but at least one group different from another
emmip(mdf.m1, Group~Density, CIs = T, type = "response") #shows on the level of the response
emmeans(mdf.m1, pairwise~Group) #not significant when adjusted for the tukey test
##FB Invasive ####
mdf.m4 <- glmmTMB(Invasive.Cover ~ Group * Density #* for interaction
+ (1|Block),
data = useData,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
summary(mdf.m4)
simulateResiduals(mdf.m4, plot = T)
plotResiduals(mdf.m4, form= useData$Density)
emmip(mdf.m4, Group~Density, CIs = T) #looks significant without CI but the CI shows it isn't
car::Anova(mdf.m4) #no interaction but densities different and at least one group different
emm4a <- emmeans(mdf.m4, pairwise~Group, type = "response", adjust = 'tukey')
data4a <- multcomp::cld(emm4a, alpha = 0.1, Letters = letters)
ggplot(data = data4a, aes(x = Group, y = response * 100)) +
geom_point(size=2) +
geom_errorbar(aes(ymin = 100*(response - SE),
ymax = 100*(response+SE)),
width=0, size=0.5) +
labs(x="Seed Mix", y = "Model predicted percent cover") +
geom_text(aes(label = .group,  y = response * 100),
nudge_x = 0.2)
ggsave("model_means_total_invasive_fb_mix.jpeg")
emm4b <- emmeans(mdf.m4, pairwise~Density, type = "response", adjust = 'tukey')
data4b <- multcomp::cld(emm4b, alpha = 0.1, Letters = letters)
ggplot(data = data4b, aes(x = Density, y = response * 100)) +
geom_point(size=2) +
geom_errorbar(aes(ymin = 100*(response - SE),
ymax = 100*(response+SE)),
width=0, size=0.5) +
labs(x="Seed Mix", y = "Model predicted percent cover") +
geom_text(aes(label = .group,  y = response * 100),
nudge_x = 0.2)
ggsave("model_means_total_invasive_fb_density.jpeg")
load("clean_dfs.RData")
library(tidyverse)
library(glmmTMB) #allows us to use a beta distribution
library(DHARMa)
library(emmeans)
library(car)
library(multcompView)
library(gridExtra)
library(multcomp)
options(contrasts = c("contr.sum", "contr.poly"))
fb$Group <- as.factor(fb$Group)
fb$Density <- as.factor(fb$Density)
ul$Group <- as.factor(ul$Group)
ul$Density <- as.factor(ul$Density)
##fb ####
fb2 <-fb %>%
dplyr::select(Block, Plot, Group, Density, Date, PHAU, Cheno, Typha,
BOMA, DISP, EUMA, SYCI, LEFA, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA,
RUST, Unk_Bulrush, SARU, Tamarisk) %>%  #remove unnecessary columns
filter(Date == "2022-09-16") %>%  #only the last sampling date
pivot_longer(
cols = 6:24,
names_to = "SPP",
values_to = "Percent_Cover"
) %>% #pivot so that all species names are in one column
mutate(Status = case_when(
SPP %in% c("PHAU", "TYPHA", "RUST", "Tamarisk") ~ "Invasive",
SPP %in% c("BOMA", "SCAC", "SCAM") & Group == 4 ~ "Seeded",
SPP %in% c("DISP", "MUAS") & Group == 3 ~ "Seeded",
SPP %in% c("EUOC", "EUMA") & Group == 1 ~ "Seeded",
SPP %in% c("SYCI", "BICE", "RUMA", "BIFR") & Group == 5 ~ "Seeded",
TRUE ~ "Native"))%>%  #make a new column for species status
group_by(Block, Plot, Density, Group, Status) %>% #group by the plot and species status
summarise(PC = sum(Percent_Cover, na.rm = TRUE)) %>%  #calculate totals
pivot_wider(names_from = Status,
values_from = PC) %>%  #make wide again
filter(Density != "C") #idk I did this before, I think to converge
#remove NAs and 0s - make one half the smallest value
fb2$Seeded[fb2$Seeded %in% c(0, NA)] <- 0.0025
fb2$Group <- factor(fb2$Group)
fb2$Density <- factor(fb2$Density)
View(fb2)
View(fb)
fb2 <-fb %>%
dplyr::select(Block, Plot, Group, Density, Date, BOMA, SCAM, SCAC) %>%  #remove unnecessary columns
filter(Date == "2022-09-16") %>%  #only the last sampling date
pivot_longer(
cols = 6:24,
names_to = "SPP",
values_to = "Percent_Cover"
)
fb2 <-fb %>%
dplyr::select(Block, Plot, Group, Density, Date, BOMA, SCAM, SCAC)
fb2 <-fb %>%
dplyr::select(Block, Plot, Group, Density, Date, BOMA, SCAM, SCAC) %>%  #remove unnecessary columns
filter(Date == "2022-09-16") %>%  #only the last sampling date
pivot_longer(
cols = 6:9,
names_to = "SPP",
values_to = "Percent_Cover"
)
fb2 <-fb %>%
dplyr::select(Block, Plot, Group, Density, Date, BOMA, SCAM, SCAC) %>%  #remove unnecessary columns
filter(Date == "2022-09-16")
fb2 <-fb %>%
dplyr::select(Block, Plot, Group, Density, Date, BOMA, SCAM, SCAC) %>%  #remove unnecessary columns
filter(Date == "2022-09-16") %>%
summarize(bulrush = mean(BOMA, SCAM, SCAC))
fb2 <-fb %>%
dplyr::select(Block, Plot, Group, Density, Date, BOMA, SCAM, SCAC) %>%  #remove unnecessary columns
filter(Date == "2022-09-16") %>%
summarize(bulrush = mean(BOMA, SCAM, SCAC))
fb2 <-fb %>%
dplyr::select(Block, Plot, Group, Density, Date, BOMA, SCAM, SCAC) %>%  #remove unnecessary columns
filter(Date == "2022-09-16") %>%
summarize(bulrush = mean(BOMA:SCAC))
fb2 <-fb %>%
dplyr::select(Block, Plot, Group, Density, Date, BOMA, SCAM, SCAC) %>%  #remove unnecessary columns
filter(Date == "2022-09-16") %>%
summarize(bulrush = mean(BOMA, SCAM, SCAC, na.rm=TRUE))
fb2 <-fb %>%
dplyr::select(Block, Plot, Group, Density, Date, BOMA, SCAM, SCAC) %>%  #remove unnecessary columns
filter(Date == "2022-09-16") %>%
summarize(bulrush = sum(BOMA, SCAM, SCAC, na.rm= TRUE))
fb2 <-fb %>%
dplyr::select(Block, Plot, Group, Density, Date, BOMA, SCAM, SCAC) %>%  #remove unnecessary columns
filter(Date == "2022-09-16") %>%
mutate(bulrush = sum(BOMA, SCAM, SCAC, na.rm= TRUE))
fb2 <-fb %>%
dplyr::select(Block, Plot, Group, Density, Date, BOMA, SCAM, SCAC) %>%  #remove unnecessary columns
filter(Date == "2022-09-16") %>%
group_by(Block, Plot, Group, Density) %>%
mutate(bulrush = sum(BOMA, SCAM, SCAC, na.rm= TRUE))
mdf.m1 <- glmmTMB(bulrush ~ Group * Density #* for interaction
+ (1|Block),
data = fb2,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
mdf.m1 <- glmmTMB(bulrush ~ Group * Density #* for interaction
+ (1|Block),
data = fb2,
family = gaussian, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
with(fb2, table(Group, Density, useNA = "ifany"))
fb3 <- fb %>%
mutate(tGroup = if_else(Group == "10", "0", "1"))
View(fb3)
fb3 <- fb2 %>%
mutate(tGroup = if_else(Group == "10", "0", "1"))
with(fb3, table(Group, tGroup))
# Control versus notControl----
m1 <- glmmTMB(bulrush ~ tGroup
+ (1|Block),
data = fb3,
family = gaussian)
summary(m1)
car::Anova(m1)
#comparing the control to the average of all the others
emmeans(m1, ~ tGroup)
# Two way factorial without interaction; no control----
m2 <- glmmTMB(bulrush ~ Group + Density,
data = filter(fb3, tGroup == "1"), #only retain the treatments
family = gaussian)
summary(m2)
car::Anova(m2)
#strong suggestion that there is no effect of density but there is an effect of group
car::Anova(m2, type = 3)
emmip(m2, Group ~ Density)
#bulrush tends to be higher at low density
#group 4 has more bulrush
emmip(m2, Group ~ Density, type = "response", CIs = T)
emmeans(m2, ~ Group + Density)
emmeans(m2, pairwise~ Group)
# Two way factorial without interaction plus control----
m3 <- glmmTMB(bulrush ~ tGroup + tGroup/Group + tGroup/Density, #nesting of the fixed effects factors
data = fb3,
family = gaussian)
summary(m3)
m3 <- glmmTMB(bulrush ~ tGroup + Group + Group/Density, #nesting of the fixed effects factors
data = fb3,
family = gaussian)
summary(m3)
# Two way factorial with interaction; no control----
m4 <- glmmTMB(bulrush ~ Group * Density,
data = filter(fb3, tGroup == "1"),
family = gaussian)
summary(m4)
car::Anova(m4)
emmip(m4, Group ~ Density)
emmip(m4, Group ~ Density, type = "response", CIs = T)
emmeans(m4, pairwise~ Group )
# Two way factorial with interaction plus control----
m5 <- glmmTMB(bulrush ~ tGroup + tGroup/Group * tGroup/Density,
data = fb3,
family = gaussian)
summary(m5)
# Two way factorial without interaction plus control----
##not working
m3 <- glmmTMB(bulrush ~ tGroup + tGroup/Group + tGroup/Density
+ (1|Block), #nesting of the fixed effects factors
data = fb3,
family = gaussian)
#Variability among the control
fb3$gd <- factor(fb3$Group:fb3$Density)
table(fb3$gd)
ggplot(fb3, aes(x = gd, y = bulrush)) +
geom_point()
ggplot(fb3, aes(x = gd, y = bulrush, group = Block, color = Block
)) +
geom_point()
ggplot(fb3, aes(x = gd, y = bulrush, group = Block, color = Block)) +
geom_point() +
geom_line()
ggplot(fb3, aes(x = gd, y = bulrush, group = Block, color = as.factor(Block))) +
geom_point() +
geom_line()
table(fb3$gd, fb3$bulrush)
fb2 <-fb %>%
dplyr::select(Block, Plot, Group, Density, Date, Total, BOMA, SCAM, SCAC) %>%  #remove unnecessary columns
filter(Date == "2022-09-16") %>%
group_by(Block, Plot, Group, Density) %>%
mutate(bulrush = sum(BOMA, SCAM, SCAC, na.rm= TRUE))
fb2 <-fb %>%
dplyr::select(Block, Plot, Group, Density, Date, Total.Cover, BOMA, SCAM, SCAC) %>%  #remove unnecessary columns
filter(Date == "2022-09-16") %>%
group_by(Block, Plot, Group, Density) %>%
mutate(bulrush = sum(BOMA, SCAM, SCAC, na.rm= TRUE))
fb2 <-fb %>%
dplyr::select(Block, Plot, Group, Density, Date, Total.Cover, BOMA, SCAM, SCAC) %>%  #remove unnecessary columns
filter(Date == "2022-09-16")
fb3 <- fb2 %>%
mutate(tGroup = if_else(Group == "10", "0", "1"))
#Variability among the control
fb3$gd <- factor(fb3$Group:fb3$Density)
table(fb3$gd)
ggplot(fb3, aes(x = gd, y = Total.Cover, group = Block, color = as.factor(Block))) +
geom_point() +
geom_line()
m3 <- glmmTMB(Total.Cover ~ tGroup + tGroup/Group + tGroup/Density
+ (1|Block), #nesting of the fixed effects factors
data = fb3,
family = gaussian)
#when we look at Total.Cover, we see a decisive block effect
#variability in the control that is consistent with the block
fb3$tGroup:fb3$Group
#when we look at Total.Cover, we see a decisive block effect
#variability in the control that is consistent with the block
fb3$tGroup <- as.factor(fb3$tGroup)
fb3$tGroup:fb3$Group
unique(fb3$tGroup:fb3$Group)
m3 <- glmmTMB(Total.Cover ~ tGroup + tGroup/Group + tGroup/Density
+ (1|Block), #nesting of the fixed effects factors
data = fb3,
family = gaussian)
m3 <- glmmTMB(Total.Cover ~ gd
+ (1|Block), #nesting of the fixed effects factors
data = fb3,
family = gaussian)
summary(m3)
car::Anova(m3, type = 2)
table(fb3$gd)
emmeans(mdf.m3, specs = trt.vs.ctrlk~gd,ref = 3)
emmeans(m2, specs = trt.vs.ctrlk~gd,ref = 3)
emmeans(m3, specs = trt.vs.ctrlk~gd,ref = 3)
m3 <- glmmTMB(bulrush ~ gd
+ (1|Block), #nesting of the fixed effects factors
data = fb3,
family = gaussian)
fb2 <-fb %>%
dplyr::select(Block, Plot, Group, Density, Date, Total.Cover, BOMA, SCAM, SCAC) %>%  #remove unnecessary columns
filter(Date == "2022-09-16") %>%
group_by(Block, Plot, Group, Density) %>%
mutate(bulrush = sum(BOMA, SCAM, SCAC, na.rm= TRUE))
with(fb2, table(Group, Density, useNA = "ifany"))
fb3 <- fb2 %>%
mutate(tGroup = if_else(Group == "10", "0", "1"))
#when we look at Total.Cover, we see a decisive block effect
#variability in the control that is consistent with the block
fb3$tGroup <- as.factor(fb3$tGroup)
m3 <- glmmTMB(bulrush ~ gd
+ (1|Block), #nesting of the fixed effects factors
data = fb3,
family = gaussian)
#Variability among the control
fb3$gd <- factor(fb3$Group:fb3$Density)
m3 <- glmmTMB(bulrush ~ gd
+ (1|Block), #nesting of the fixed effects factors
data = fb3,
family = gaussian)
summary(m3)
car::Anova(m3, type = 2)
emmeans(m3, specs = trt.vs.ctrlk~gd,ref = 3)
#Plot the control against the treatment
fb_c <- filter(fb3, Group == 10)
fb_t <- filter(fb3, Group != 10)
test <- left_join(fb_t, fb_c) %>%
group_by("Block")
View(test)
View(fb_c)
test <- left_join(fb_t, fb_c) %>%
group_by(Block)
?rename
#Plot the control against the treatment
fb_c <- filter(fb3, Group == 10) %>%
rename(Total.Cover_C = Total.Cover,
Bulrush_C = bulrush)
test <- left_join(fb_t, fb_c) %>%
group_by(Block)
test <- left_join(fb_t, fb_c) %>%
group_by(c("Block"))
test <- left_join(fb_t, fb_c, by = c("Block")
)
#Plot the control against the treatment
fb_c <- filter(fb3, Group == 10) %>%
select(Block, Total.Cover, bulrush) %>%
rename(Total.Cover_C = Total.Cover,
Bulrush_C = bulrush)
#Plot the control against the treatment
fb_c <- filter(fb3, Group == 10) %>%
select(Block, Total.Cover, bulrush) %>%
rename(Total.Cover_C = Total.Cover,
Bulrush_C = bulrush)
fb_c <- filter(fb3, Group == 10) %>%
select(Block, Total.Cover, bulrush)
fb_c <- filter(fb3, Group == 10)
#Plot the control against the treatment
fb_c <- filter(fb3, Group == 10) %>%
select(Block, Total.Cover, bulrush) %>%
rename(Total.Cover_C = Total.Cover,
Bulrush_C = bulrush)
fb_c <- filter(fb3, Group == 10)
fb_c <- filter(fb3, Group == 10) %>%
select(Block, Total.Cover, bulrush)
#Plot the control against the treatment
fb_c <- filter(fb3, Group == 10) %>%
rename(Total.Cover_C = Total.Cover,
Bulrush_C = bulrush) %>%
select(Block, Total.Cover_C, Bulrush_C)
#Plot the control against the treatment
fb_c <- filter(fb3, Group == 10) %>%
rename(Total.Cover_C = Total.Cover,
Bulrush_C = bulrush) %>%
tidyverse::select(Block, Total.Cover_C, Bulrush_C)
#Plot the control against the treatment
fb_c <- filter(fb3, Group == 10) %>%
rename(Total.Cover_C = Total.Cover,
Bulrush_C = bulrush) %>%
dplyr::select(Block, Total.Cover_C, Bulrush_C)
fb_t <- filter(fb3, Group != 10)
test <- left_join(fb_t, fb_c, by = c("Block"))
ggplot(test, aes(x = Total.Cover_C, y = Total.Cover, color = gd)) +
geom_point() +
geom_abline(intercept = 0, slope = 1)
ggplot(test, aes(x = Total.Cover_C, y = Total.Cover, color = gd)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_smooth()
ggplot(test, aes(x = Total.Cover_C, y = Total.Cover, color = gd)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_line()
ggplot(test, aes(x = Total.Cover_C, y = Total.Cover, color = gd)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_line(group = gd)
ggplot(test, aes(x = Total.Cover_C, y = Total.Cover, color = gd, group = gd)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_line()
ggplot(test, aes(x = Total.Cover_C, y = Total.Cover, color = gd, group = gd)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_line() +
facet_wrap(~gd)
ggplot(test, aes(x = Bulrush_C, y = Total.Cover, color = gd, group = gd)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_line() +
facet_wrap(~gd)
ggplot(test, aes(x = Bulrush_C, y = bulrush, color = gd, group = gd)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_line() +
facet_wrap(~gd)
ggplot(test, aes(x = Bulrush_C, y = bulrush, color = gd, group = gd)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
geom_line() +
geom_smooth(method = "lm") +
facet_wrap(~gd)
citation()
version$version.string
citation(glmmTMB)
citation("glmmTMB")
packageVersion("glmmTMB")
packageVersion("DHARMa")
citation("glmmTMB")
citation("DHARMa")
packageVersion("cars")
packageVersion("car")
citation("car")
packageVersion("emmeans")
citation("emmeans")
packageVersion("multcomp")
citation("multcomp")
packageVersion("quantreg")
citation("quantreg")
packageVersion("quantreg")
packageVersion("bbmle")
citation("bbmle")
is.na(fb$Total.Cover)
#all NAs should actually be 0s
is.na(fb$Total.Cover) <- 0
is.na(fb$Total.Cover)
is.na(fb$PHAU)
is.na(fb$PHAU) <- 0
is.na(fb$PHAU)
View(fb)
is.na(fb$Total.Cover)
is.na(fb$PHAU)
is.na(fb$PHAU) <- 0
is.na(fb$PHAU)
fb$PHAU[is.na(fb$PHAU)]
is.na(fb$PHAU)
fb$PHAU[is.na(fb$PHAU)] <- 0
is.na(fb$PHAU)
fb$Cheno[is.na(fb$Cheno)] <- 0
fb$Typha[is.na(fb$Typha)] <- 0
fb$BOMA[is.na(fb$BOMA)] <- 0
fb$DISP[is.na(fb$DISP)] <- 0
fb$EUMA[is.na(fb$EUMA)] <- 0
fb$SYCI[is.na(fb$SYCI)] <- 0
fb$LEFA[is.na(fb$LEFA)] <- 0
fb$SCAC[is.na(fb$SCAC)] <- 0
fb$BICE[is.na(fb$BICE)] <- 0
fb$BIFR[is.na(fb$BIFR)] <- 0
fb$EUOC[is.na(fb$EUOC)] <- 0
fb$MUAS[is.na(fb$MUAS)] <- 0
fb$SCAM[is.na(fb$SCAM)] <- 0
fb$RUMA[is.na(fb$RUMA)] <- 0
fb$RUST[is.na(fb$RUST)] <- 0
fb$Unk_Forb[is.na(fb$Unk_Forb)] <- 0
fb$Unk_Grass[is.na(fb$Unk_Grass)] <- 0
fb$Unk_Bulrush[is.na(fb$Unk_Bulrush)] <- 0
fb$SARU[is.na(fb$SARU)] <- 0
fb$Tamarisk[is.na(fb$Tamarisk)] <- 0
source("~/Documents/USUClasses/Thesis_Code/Field22/Code/Data_Cleaning.R", echo=TRUE)
ul$Total.Cover[is.na(ul$Total.Cover)]
ul$Total.Cover[is.na(ul$Total.Cover)] <- 0
is.na(ul$Total.Cover)
is.na(ul$Unk_Forb)
ul$Unk_Forb[is.na(ul$Unk_Forb)] <- 0
is.na(ul$Unk_Forb)
ul$PHAU[is.na(ul$PHAU)] <- 0
ul$Unk_Sedge[is.na(ul$Unk_Sedge)] <- 0
ul$BOMA[is.na(ul$BOMA)] <- 0
ul$RUMA[is.na(ul$RUMA)] <- 0
ul$BASC[is.na(ul$BASC)] <- 0
ul$CYER[is.na(ul$CYER)] <- 0
ul$LASE[is.na(ul$LASE)] <- 0
ul$Cheno[is.na(ul$Cheno)] <- 0
ul$SCAC[is.na(ul$SCAC)] <- 0
ul$SCPU[is.na(ul$SCPU)] <- 0
ul$SCAM[is.na(ul$SCAM)] <- 0
ul$DISP[is.na(ul$DISP)] <- 0
ul$RACY[is.na(ul$RACY)] <- 0
ul$ASIN[is.na(ul$ASIN)] <- 0
ul$Unk_Grass[is.na(ul$Unk_Grass)] <- 0
ul$CYDA[is.na(ul$CYDA)] <- 0
ul$POFR[is.na(ul$POFR)] <- 0
ul$SAAM[is.na(ul$SAAM)] <- 0
ul$Unk_Bulrush[is.na(ul$Unk_Bulrush)] <- 0
ul$BY[is.na(ul$BY)] <- 0
ul$SYCI[is.na(ul$SYCI)] <- 0
ul$EUOC[is.na(ul$EUOC)] <- 0
ul$TYPHA[is.na(ul$TYPHA)] <- 0
ul$Tamarisk[is.na(ul$Tamarisk)] <- 0
ul$POPE[is.na(ul$POPE)] <- 0
glimpse(ul)
ul$ALPR[is.na(ul$ALPR)] <- 0
ul$BICE[is.na(ul$BICE)] <- 0
source("~/Documents/USUClasses/Thesis_Code/Field22/Code/Data_Cleaning.R", echo=TRUE)
