library(glmmTMB) #allows us to use a beta distribution
library(DHARMa)
library(emmeans)
library(car)
library(multcompView)
library(gridExtra)
options(contrasts = c("contr.sum", "contr.poly"))
fb$Group <- as.factor(fb$Group)
fb$Density <- as.factor(fb$Density)
ul$Group <- as.factor(ul$Group)
ul$Density <- as.factor(ul$Density)
####FB
#summarize the cover of all the natives and invasives (from graphing code)
#Pivot table so columns are response but species are rows
fb_short <- fb[-c(28,6, 23, 24, 29, 30, 31)] #removing notes column and things we don't want calculated (unknowns and total cover and measurements)
fb_end <- fb_short %>% #make it so it is only the final date
filter(Date == "2022-09-16")
fb_long <- fb_end %>% #pivot the table
tidyr::pivot_longer(
cols = 6:24,
names_to = "SPP",
values_to = "Percent_Cover"
)
#groups natives and invasives
fb_split<- fb_long %>%
dplyr::mutate(Status =
dplyr::if_else(
SPP %in%
c("PHAU", "Typha", "Rust", "Tamarisk"),
"Invasive", "Native"))
#make all cover values 0 < y < 1
fb_split$Percent_Cover <- fb_split$Percent_Cover/100
#get rid of NAs
fb_split$Percent_Cover[is.na(fb_split$Percent_Cover)] <- 0.005 #make 0s a trace amount - could be half the smallest amount
##Model - does invasive cover change with plot?
mdf <- fb_split %>%
filter(Status == "Invasive")
#there's not enough data to do the interaction
#i also figured there wasn't enoguh phrag so I did all invasives
mdf.m1 <- glmmTMB(Percent_Cover ~ Group + Density #* for interaction
+ (1|Block),
data = mdf,
family = beta_family, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
View(mdf)
View(fb)
fb_short
View(fb_short)
fb_end <- fb %>% filter(Date == "2022-09-16")
View(fb_end)
mdf.m1 <- glmmTMB(Total.Cover ~ Group + Density #* for interaction
+ (1|Block),
data = fb_end,
family = gaussian, #because cover
control = glmmTMBControl(optimizer = optim,
optArgs = list(method="BFGS"))
)
summary(mdf.m1)
load("clean_dfs.RData")
library(ggplot2)
library(tidyverse)
library(RColorBrewer)
#Pivot table so columns are response but species are rows
fb_short <- fb[-c(28,6, 23, 24, 29, 30, 31)] #removing notes column and things we don't want calculated (unknowns and total cover and measurements)
fb_end <- fb_short %>% #make it so it is only the final date
filter(Date == "2022-09-16")
fb_wide <- fb_end %>% #pivot the table
tidyr::pivot_longer(
cols = 6:24,
names_to = "SPP",
values_to = "Percent_Cover"
)
#groups natives and invasives
fb_split<- fb_wide %>%
dplyr::mutate(Status =
dplyr::if_else(
SPP %in%
c("PHAU", "Typha", "Rust", "Tamarisk"),
"Invasive", "Native"))
fb_split<-fb_split %>% #and now calculate the total cover for invasive and native for each block and plot
dplyr::group_by(Block, Plot, Status) %>%
dplyr::summarise(PC = sum(Percent_Cover, na.rm = TRUE))
plot_names <- c("Perennial forbs (high)", "Perennial forbs (high)",
"Perennial forbs (low)", "Perennial forbs (low)",
"Rushes (high)", "Rushes (high)", "Rushes (low)", "Rushes (low)",
"Grasses (high)", "Grasses (high)", "Grasses (low)", "Grasses (low)",
"Bulrushes (high)", "Bulrushes (high)", "Bulrushes (low)", "Bulrushes (low)",
"Annual forbs (high)", "Annual forbs (high)", "Annual forbs (low)", "Annual forbs (low)",
"Control", "Control")
fb_split$plot_names <- rep(plot_names, 6)
#Graph of all the plots and total cover - split invasive and native
fb_split %>%
ggplot(aes(x = plot_names, y = PC, color = Status)) +
stat_summary(aes(group = Status),
fun = mean, geom = "point", size = 3) +
stat_summary(aes(group = Status, width = 0),
fun.data = mean_se, geom = "errorbar", size = 1.5) +
labs(x = "Functional Group", y = "Cover (%)") +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9)) +
ggtitle("Great Salt Lake")
#Graph of all the plots and total cover - split invasive and native
fb_split %>%
ggplot(aes(x = plot_names, y = PC, color = Status)) +
stat_summary(aes(group = Status),
fun = mean, geom = "point", size = 3) +
stat_summary(aes(group = Status, width = 0),
fun.data = mean_se, geom = "errorbar", size = 1.5) +
labs(x = "Functional Group", y = "Cover (%)") +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9)) +
ggtitle("Great Salt Lake") +
ylim(0, 100)
#Graph of all the plots and total cover - split invasive and native
fb_split %>%
ggplot(aes(x = plot_names, y = PC, color = Status)) +
stat_summary(aes(group = Status),
fun = mean, geom = "point", size = 2) +
stat_summary(aes(group = Status, width = 0),
fun.data = mean_se, geom = "errorbar", size = 1.5) +
labs(x = "Functional Group", y = "Cover (%)") +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9)) +
ggtitle("Great Salt Lake") +
ylim(0, 100)
#Graph of all the plots and total cover - split invasive and native
fb_split %>%
ggplot(aes(x = plot_names, y = PC, color = Status)) +
stat_summary(aes(group = Status),
fun = mean, geom = "point", size = 2) +
stat_summary(aes(group = Status, width = 0),
fun.data = mean_se, geom = "errorbar", size = 1) +
labs(x = "Functional Group", y = "Cover (%)") +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9)) +
ggtitle("Great Salt Lake") +
ylim(0, 100)
ggsave("fb_invasive_native.jpeg",
device = jpeg)
####UL####
#graphs of invasive vs native
#Pivot table so columns are response but species are rows
ul_short <- ul[-c(6, 7, 9, 21, 35, 36, 37, 38)] #removing notes column and things we don't want calculated (unknowns and total cover and measurements)
ul_end <- ul_short %>% #make it so it is only the final date
filter(Date == "2022-09-16")
ul_wide <- ul_end %>% #pivot the table
tidyr::pivot_longer(
cols = 6:30,
names_to = "SPP",
values_to = "Percent_Cover"
)
#groups natives and invasives
ul_split<- ul_wide %>%
dplyr::mutate(Status =
dplyr::if_else(
SPP %in%
c("PHAU", "TYPHA", "Rust", "Tamarisk", "ALPR", "CYDA", "BY",
"BASC", "LASE"),
"Invasive", "Native"))
ul_split<-ul_split %>% #and now calculate the total cover for invasive and native for each block and plot
dplyr::group_by(Block, Plot, Status) %>%
dplyr::summarise(PC = sum(Percent_Cover, na.rm = TRUE))
plot_names <- c("Perennial forbs (high)", "Perennial forbs (high)",
"Perennial forbs (low)", "Perennial forbs (low)",
"Rushes (high)", "Rushes (high)", "Rushes (low)", "Rushes (low)",
"Grasses (high)", "Grasses (high)", "Grasses (low)", "Grasses (low)",
"Bulrushes (high)", "Bulrushes (high)", "Bulrushes (low)", "Bulrushes (low)",
"Annual forbs (high)", "Annual forbs (high)", "Annual forbs (low)", "Annual forbs (low)",
"Control", "Control")
ul_split$plot_names <- rep(plot_names, 6)
#Graph of all the plots and total cover - split invasive and native
ul_split %>%
ggplot(aes(x = plot_names, y = PC, color = Status)) +
stat_summary(aes(group = Status),
fun = mean, geom = "point", size = 2) +
stat_summary(aes(group = Status, width = 0),
fun.data = mean_se, geom = "errorbar", size = 1) +
labs(x = "Functional Group", y = "Cover (%)") +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9)) +
ggtitle("Utah Lake") +
ylim(0, 100)
ggsave("ul_invasive_native.jpeg",
device = jpeg)
load("clean_dfs.RData")
load("clean_dfs.RData")
library(ggplot2)
library(tidyverse)
library(RColorBrewer)
View(fb)
select(fb, !Block, !Plot, !Group)
#Pivot table so columns are response but species are rows
fb_short <- fb%>%
select(Block, Plot, Group, Density, Date, Total.Cover, PHAU, Cheno, Typha,
BOMA, DISP, EUMA, SYCI, LEFA, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA,
RUST, Unk_Bulrush, SARU, TAMARISK)#removing notes column and things we don't want calculated (unknowns and total cover and measurements)
#Pivot table so columns are response but species are rows
fb_short <- fb%>%
select(Block, Plot, Group, Density, Date, Total.Cover, PHAU, Cheno, Typha,
BOMA, DISP, EUMA, SYCI, LEFA, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA,
RUST, Unk_Bulrush, SARU, Tamarisk)#removing notes column and things we don't want calculated (unknowns and total cover and measurements)
glimpse(fb)
glimpse(fb_short)
#Pivot table so columns are response but species are rows
fb_short <- fb[-c(28,6, 23, 24, 29, 30, 31)] %>%
select(Block, Plot, Group, Density, Date, PHAU, Cheno, Typha,
BOMA, DISP, EUMA, SYCI, LEFA, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA,
RUST, Unk_Bulrush, SARU, Tamarisk)#removing notes column and things we don't want calculated (unknowns and total cover and measurements)
#Pivot table so columns are response but species are rows
fb_short <- fb%>%
select(Block, Plot, Group, Density, Date, PHAU, Cheno, Typha,
BOMA, DISP, EUMA, SYCI, LEFA, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA,
RUST, Unk_Bulrush, SARU, Tamarisk)#removing notes column and things we don't want calculated (unknowns and total cover and measurements)
glimpse(fb_hort)
glimpse(fb_short)
30-7
#Pivot table so columns are response but species are rows
fb_short <- fb[-c(28,6, 23, 24, 29, 30, 31)]
glimpse(fb_short)
####UL####
#graphs of invasive vs native
#Pivot table so columns are response but species are rows
ul_short <- ul[-c(6, 7, 9, 21, 35, 36, 37, 38)] #removing notes column and things we don't want calculated (unknowns and total cover and measurements)
glimpse(ul_short)
glimpse(ul)
####UL####
#graphs of invasive vs native
#Pivot table so columns are response but species are rows
ul_short <- ul%>%
select(Block, Plot, Group, Density, Date, PHAU, BOMA, BICE, CYER, RUMA,
Cheno, SCAC, SCAM, DISP, RACY, ASIN, ALPR, CYDA, Unk_Bulrush, BY, SYCI,
EUOC, TYPHA, Tamarisk, POPE, POFR, SAAM, BASC, LASE)#removing notes column and things we don't want calculated (unknowns and total cover and measurements)
glimpse(ul_short)
####UL####
#graphs of invasive vs native
#Pivot table so columns are response but species are rows
ul_short <- ul%>%
select(Block, Plot, Group, Density, Date, PHAU, BOMA, BICE, CYER, RUMA,
Cheno, SCAC, SCPU, SCAM, DISP, RACY, ASIN, ALPR, CYDA, Unk_Bulrush, BY, SYCI,
EUOC, TYPHA, Tamarisk, POPE, POFR, SAAM, BASC, LASE)#removing notes column and things we don't want calculated (unknowns and total cover and measurements)
glimpse(ul-short)
glimpse(ul_short)
#trt x control to see how they look compared to the control
fb %>% ggplot(Total.Cover ~ Plot)
#trt x control to see how they look compared to the control
fb %>% ggplot(aes(x = Plot, y = Total.Cover))
#trt x control to see how they look compared to the control
fb %>% ggplot(aes(x = Plot, y = Total.Cover)) +
facet_wrap(Block)
#trt x control to see how they look compared to the control
fb %>% ggplot(aes(x = Plot, y = Total.Cover)) +
facet_wrap(~Block)
#trt x control to see how they look compared to the control
fb %>% ggplot(aes(x = Group, y = Total.Cover)) +
facet_wrap(~Block)
#trt x control to see how they look compared to the control
fb %>% ggplot(aes(x = Group, y = Total.Cover))
#trt x control to see how they look compared to the control
plot(fb, Total.Cover ~ Plot)
#trt x control to see how they look compared to the control
plot(fb, Total.Cover ~ Plot)
#trt x control to see how they look compared to the control
plot(fb, Total.Cover)
glimpse(fb)
#trt x control to see how they look compared to the control
fb_1 <- fb %>% filter(Date == "2022-09-16")
plot(fb, Total.Cover)
fb$Total.Cover
plot(fb_1, Total.Cover~Plot)
ggplot(data = fb_1,
aes(x = Plot, y = Total.Color))
ggplot(data = fb_1,
aes(x = Plot, y = Total.Cover))
glimpse(fb)
ggplot(data = fb_1,
aes(x = Group, y = Total.Cover))
ggplot(data = fb_1,
aes(x = Group, y = Total.Cover, color = Density))
#trt x control to see how they look compared to the control
fb_1 <- fb %>% filter(Date == "2022-09-16", Block = 1)
#trt x control to see how they look compared to the control
fb_1 <- fb %>% filter(Date == "2022-09-16", Block == 1)
ggplot(data = fb_1,
aes(x = Group, y = Total.Cover))
ggplot(data = fb_1,
aes(x = Group, y = Total.Cover)) +
geom_bar()
fb_1 %>%
ggplot(aes(x = Group, y = Total.Cover)) +
geom_bar()
fb_1 %>%
ggplot(aes(x = Group, y = Total.Cover)) +
geom_histogram()
fb_1 %>%
ggplot(aes(x = Group, y = Total.Cover)) +
geom_point()
#trt x control to see how they look compared to the control
fb_1 <- fb %>% filter(Date == "2022-09-16")
fb_1 %>%
ggplot(aes(x = Group, y = Total.Cover)) +
geom_point()
fb_1 %>%
ggplot(aes(x = Group, y = Total.Cover)) +
geom_point() +
stat_summary(aes(group = Group), fun = mean, geom = point)
fb_1 %>%
ggplot(aes(x = Group, y = Total.Cover)) +
geom_point() +
stat_summary(aes(group = Group), fun = mean, geom = "point")
#Graph of all the plots and total cover - split invasive and native
fb_split %>%
ggplot(aes(x = plot_names, y = PC, color = Status)) +
stat_summary(aes(group = Status),
fun = mean, geom = "point", size = 2) +
stat_summary(aes(group = Status, width = 0),
fun.data = mean_se, geom = "errorbar", size = 1) +
labs(x = "Functional Group", y = "Cover (%)") +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9)) +
ggtitle("Great Salt Lake") +
ylim(0, 100)
fb_1 %>%
ggplot(aes(x = Group, y = Total.Cover)) +
stat_summary(aes(group = Group),
fun = mean, geom = "point")
fb_1 %>% ggplot(aes(x = Group, y = Total.Cover)) +
stat_summary(aes(group = Group),
fun = mean, geom = "point") +
stat_summary(aes(group = Group),
fun = mean_se, geom = "errorbar")
fb_1 %>% ggplot(aes(x = Group, y = Total.Cover)) +
stat_summary(aes(group = Group),
fun = mean, geom = "point") +
stat_summary(aes(group = Group),
fun = mean_se, geom = "errorbar"))
fb_1 %>% ggplot(aes(x = Group, y = Total.Cover) +
fb_1 %>% ggplot(aes(x = Group, y = Total.Cover)) +
stat_summary(aes(group = Group),
fun = mean, geom = "point") +
stat_summary(aes(group = Group),
fun = mean_se, geom = "errorbar")
fb_1 %>% ggplot(aes(x = Group, y = Total.Cover)) +
fb_1 %>% ggplot(aes(x = Group, y = Total.Cover)) +
stat_summary(aes(group = Group),
fun = mean, geom = "point")
fb_1 %>% ggplot(aes(x = Group, y = Total.Cover)) +
stat_summary(aes(group = Group),
fun = mean, geom = "point") +
stat_summary(aes(group = Group),
fun = mean_se, geom = "errorbar")
fb_1 %>% ggplot(aes(x = Group, y = Total.Cover)) +
stat_summary(aes(group = Group),
fun = mean, geom = "point") +
stat_summary(aes(group = Block),
fun = mean_se, geom = "errorbar")
fb_1 %>% ggplot(aes(x = Group, y = PHAU)) +
stat_summary(aes(group = Group),
fun = mean, geom = "point")
fb_1 %>% ggplot(aes(x = Group, y = PHAU))
fb_1 %>% ggplot(aes(x = Group, y = Total.Cover)) +
geom_point()
fb_1 %>% ggplot(aes(x = Group, y = PHAY)) +
geom_point()
fb_1 %>% ggplot(aes(x = Group, y = PHAU)) +
geom_point()
fb_1 %>% ggplot(aes(x = Group, y = Typha)) +
geom_point()
fb_1 %>% ggplot(aes(x = Group, y = Tamarisk)) +
geom_point()
fb_1 %>% ggplot(aes(x = Group, y = BY)) +
geom_point()
fb_1 %>% ggplot(aes(x = Group, y = DISP)) +
geom_point()
fb_1 %>% ggplot(aes(x = Group, y = BOMA)) +
geom_point()
fb_1 %>% ggplot(aes(x = Group, y = SCAC)) +
geom_point()
fb_1 %>% ggplot(aes(x = Group, y = SCAM)) +
geom_point()
fb_1 %>% ggplot(aes(x = Group, y = SCPU)) +
geom_point()
fb_1 %>% ggplot(aes(x = Group, y = Unk_Bulrush)) +
geom_point()
View(fb_1)
fb_1 %>% ggplot(aes(x = Group, y = BICE)) +
geom_point()
fb_1 %>% ggplot(aes(x = Group, y = EUMA)) +
geom_point()
fb_1 %>% ggplot(aes(x = Group, y = SOCA)) +
geom_point()
fb_1 %>% ggplot(aes(x = Group, y = SYCI)) +
geom_point()
fb_1 %>% ggplot(aes(x = Group, y = EUOC)) +
geom_point()
fb_1 %>% ggplot(aes(x = Group, y = RUMA)) +
geom_point()
#things I planted that came up: BOMA, DISP, EUMA, SYCI, SCAC, BICE, EUOC, MUAS, SCAM, RUMA
fb_1 %>% ggplot(aes(x = Group, y = BIFR)) +
geom_point()
#things I planted that came up: BOMA, DISP, EUMA, SYCI, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA
fb_1 %>% ggplot(aes(x = Group, y = BOMA)) +
geom_point()
#things I planted that came up: BOMA, DISP, EUMA, SYCI, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA
fb_1 %>% ggplot(aes(x = Group, y = DISP)) +
geom_point()
#things I planted that came up: BOMA, DISP, EUMA, SYCI, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA
fb_1 %>% ggplot(aes(x = Group, y = EUMA)) +
geom_point()
#things I planted that came up: BOMA, DISP, EUMA, SYCI, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA
fb_1 %>% ggplot(aes(x = Group, y = SYCI)) +
geom_point()
#things I planted that came up: BOMA, DISP, EUMA, SYCI, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA
fb_1 %>% ggplot(aes(x = Group, y = SCAC)) +
geom_point()
#things I planted that came up: BOMA, DISP, EUMA, SYCI, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA
fb_1 %>% ggplot(aes(x = Group, y = BICE)) +
geom_point()
#things I planted that came up: BOMA, DISP, EUMA, SYCI, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA
fb_1 %>% ggplot(aes(x = Group, y = EUOC
)) +
geom_point()
#things I planted that came up: BOMA, DISP, EUMA, SYCI, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA
fb_1 %>% ggplot(aes(x = Group, y = MUAS
)) +
geom_point()
#things I planted that came up: BOMA, DISP, EUMA, SYCI, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA
fb_1 %>% ggplot(aes(x = Group, y = SCAM
)) +
geom_point()
#things I planted that came up: BOMA, DISP, EUMA, SYCI, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA
fb_1 %>% ggplot(aes(x = Group, y = RUMA
)) +
geom_point()
####UL####
####General graph####
#trt x control to see how they look compared to the control
ul_1 <- ul %>% filter(Date == "2022-09-16")
ul_1
View(ul_1)
#things I planted that came up: BOMA, DISP, EUMA, SYCI, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA
fb_1 %>% ggplot(aes(x = Group, y = PHAU
)) +
geom_point()
#things I planted that came up: BOMA, BICE, RUMA, SCAC, SCAM, DISP, SYCI, EUOC,
fb_1 %>% ggplot(aes(x = Group, y = PHAU)) +
geom_point()
#things I planted that came up: BOMA, BICE, RUMA, SCAC, SCAM, DISP, SYCI, EUOC,
UL_1 %>% ggplot(aes(x = Group, y = PHAU)) +
geom_point()
#things I planted that came up: BOMA, BICE, RUMA, SCAC, SCAM, DISP, SYCI, EUOC,
ul_1 %>% ggplot(aes(x = Group, y = PHAU)) +
geom_point()
#things I planted that came up: BOMA, BICE, RUMA, SCAC, SCAM, DISP, SYCI, EUOC,
ul_1 %>% ggplot(aes(x = Group, y = BOMA)) +
geom_point()
#things I planted that came up: BOMA, BICE, RUMA, SCAC, SCAM, DISP, SYCI, EUOC,
ul_1 %>% ggplot(aes(x = Group, y = BICE
)) +
geom_point()
#things I planted that came up: BOMA, BICE, RUMA, SCAC, SCAM, DISP, SYCI, EUOC,
ul_1 %>% ggplot(aes(x = Group, y = RUMA
)) +
geom_point()
#things I planted that came up: BOMA, BICE, RUMA, SCAC, SCAM, DISP, SYCI, EUOC,
ul_1 %>% ggplot(aes(x = Group, y = SCAC
)) +
geom_point()
#things I planted that came up: BOMA, BICE, RUMA, SCAC, SCAM, DISP, SYCI, EUOC,
ul_1 %>% ggplot(aes(x = Group, y = SCAM
)) +
geom_point()
#things I planted that came up: BOMA, BICE, RUMA, SCAC, SCAM, DISP, SYCI, EUOC,
ul_1 %>% ggplot(aes(x = Group, y = DISP
)) +
geom_point()
#things I planted that came up: BOMA, BICE, RUMA, SCAC, SCAM, DISP, SYCI, EUOC,
ul_1 %>% ggplot(aes(x = Group, y = SYCI
)) +
geom_point()
#things I planted that came up: BOMA, BICE, RUMA, SCAC, SCAM, DISP, SYCI, EUOC,
ul_1 %>% ggplot(aes(x = Group, y = EUOC
)) +
geom_point()
#things I planted that came up: BOMA, DISP, EUMA, SYCI, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA
fb_1 %>% ggplot(aes(x = Plot, y = PHAU
)) +
geom_point()
#things I planted that came up: BOMA, DISP, EUMA, SYCI, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA
fb_1 %>% ggplot(aes(x = Plot, y = BIFR
)) +
geom_point()
#things I planted that came up: BOMA, DISP, EUMA, SYCI, SCAC, BICE, BIFR, EUOC, MUAS, SCAM, RUMA
fb_1 %>% ggplot(aes(x = Plot, y = SYCI
)) +
geom_point()
#look to see if the measurements seem to be related to anything
fb_1%>% ggplot(aes(x = Plot, y = Measurement1)) +
geom_point()
#look to see if the measurements seem to be related to anything
fb_1%>% ggplot(aes(x = Plot, y = Measurement.1)) +
geom_point()
#look to see if the measurements seem to be related to anything
fb_1%>% ggplot(aes(x = Plot, y = Measurement.2)) +
geom_point()
#look to see if the measurements seem to be related to anything
fb_1%>% ggplot(aes(x = Plot, y = Measurement.3)) +
geom_point()
#look to see if the measurements seem to be related to anything
ul_1%>% ggplot(aes(x = Plot, y = Measurement.3)) +
geom_point()
#look to see if the measurements seem to be related to anything
ul_1%>% ggplot(aes(x = Plot, y = Measurement.2)) +
geom_point()
#look to see if the measurements seem to be related to anything
ul_1%>% ggplot(aes(x = Plot, y = Measurement.1)) +
geom_point()
